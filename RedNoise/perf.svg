<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>do_fault (4,599,743 samples, 0.01%)</title><rect x="1189.2" y="149" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1192.19" y="159.5" ></text>
</g>
<g >
<title>__do_softirq (3,863,400 samples, 0.01%)</title><rect x="1104.8" y="149" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1107.76" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (3,618,017 samples, 0.01%)</title><rect x="1180.0" y="213" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1182.97" y="223.5" ></text>
</g>
<g >
<title>__GI___writev (13,802,785 samples, 0.04%)</title><rect x="1179.5" y="261" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1182.54" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33,817,222 samples, 0.09%)</title><rect x="1180.1" y="261" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1183.14" y="271.5" ></text>
</g>
<g >
<title>update_process_times (10,643,813 samples, 0.03%)</title><rect x="1104.3" y="101" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1107.33" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,168,790 samples, 0.02%)</title><rect x="1189.1" y="197" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.14" y="207.5" ></text>
</g>
<g >
<title>_dl_map_object (9,894,696 samples, 0.03%)</title><rect x="1188.5" y="277" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1191.47" y="287.5" ></text>
</g>
<g >
<title>asm_common_interrupt (4,875,599 samples, 0.01%)</title><rect x="1103.9" y="213" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1106.92" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,134,705 samples, 0.02%)</title><rect x="1182.1" y="245" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1185.07" y="255.5" ></text>
</g>
<g >
<title>__alloc_skb (6,662,539 samples, 0.02%)</title><rect x="1179.7" y="53" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1182.67" y="63.5" ></text>
</g>
<g >
<title>_XlcDefaultMapModifiers (3,360,665 samples, 0.01%)</title><rect x="1179.3" y="261" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1182.33" y="271.5" ></text>
</g>
<g >
<title>sock_recvmsg (3,618,017 samples, 0.01%)</title><rect x="1180.0" y="181" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1182.97" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (4,203,561 samples, 0.01%)</title><rect x="1104.5" y="69" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1107.46" y="79.5" ></text>
</g>
<g >
<title>DrawingWindow::setPixelColour (14,735,111 samples, 0.04%)</title><rect x="76.7" y="245" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="79.74" y="255.5" ></text>
</g>
<g >
<title>Camera::buildCameraRay (17,618,818 samples, 0.05%)</title><rect x="1182.3" y="261" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1185.29" y="271.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (18,353,306 samples, 0.05%)</title><rect x="15.1" y="261" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="18.07" y="271.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (14,368,317 samples, 0.04%)</title><rect x="1188.9" y="277" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1191.95" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7,937,235 samples, 0.02%)</title><rect x="1187.8" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.78" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,124,481 samples, 0.01%)</title><rect x="1181.3" y="229" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.30" y="239.5" ></text>
</g>
<g >
<title>___sys_recvmsg (7,134,705 samples, 0.02%)</title><rect x="1182.1" y="197" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1185.07" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (6,080,579 samples, 0.02%)</title><rect x="1104.7" y="181" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1107.71" y="191.5" ></text>
</g>
<g >
<title>all (38,646,877,877 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sock_recvmsg (4,295,304 samples, 0.01%)</title><rect x="1182.1" y="165" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1185.12" y="175.5" ></text>
</g>
<g >
<title>Camera::raycast (65,558,476 samples, 0.17%)</title><rect x="11.7" y="277" width="2.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="14.66" y="287.5" ></text>
</g>
<g >
<title>timekeeping_advance (3,450,566 samples, 0.01%)</title><rect x="1104.2" y="69" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1107.22" y="79.5" ></text>
</g>
<g >
<title>__libc_recv (3,970,194 samples, 0.01%)</title><rect x="1180.0" y="261" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1182.96" y="271.5" ></text>
</g>
<g >
<title>[libexpat.so.1.8.7] (5,092,722 samples, 0.01%)</title><rect x="18.9" y="245" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="21.93" y="255.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.18.2] (5,459,608 samples, 0.01%)</title><rect x="18.0" y="245" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="21.00" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (4,230,946 samples, 0.01%)</title><rect x="1188.8" y="277" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1191.79" y="287.5" ></text>
</g>
<g >
<title>__poll (4,632,804 samples, 0.01%)</title><rect x="1181.3" y="261" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1184.28" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7,134,338 samples, 0.02%)</title><rect x="1189.1" y="213" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1192.12" y="223.5" ></text>
</g>
<g >
<title>Camera::getClosestIntersection (8,920,906 samples, 0.02%)</title><rect x="1182.8" y="261" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1185.82" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (7,787,682 samples, 0.02%)</title><rect x="1189.1" y="229" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.11" y="239.5" ></text>
</g>
<g >
<title>Triangle::getColour (7,510,191 samples, 0.02%)</title><rect x="14.1" y="277" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="17.08" y="287.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (6,029,805 samples, 0.02%)</title><rect x="1104.1" y="117" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1107.14" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,565,348 samples, 0.01%)</title><rect x="1188.8" y="261" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.81" y="271.5" ></text>
</g>
<g >
<title>DrawingWindow::setPixelColour (13,394,124 samples, 0.03%)</title><rect x="13.7" y="277" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.67" y="287.5" ></text>
</g>
<g >
<title>Triangle::v0 (1,122,134,190 samples, 2.90%)</title><rect x="1069.7" y="213" width="34.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1072.66" y="223.5" >Tr..</text>
</g>
<g >
<title>[unknown] (3,360,665 samples, 0.01%)</title><rect x="1179.3" y="245" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.33" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,970,194 samples, 0.01%)</title><rect x="1180.0" y="245" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1182.96" y="255.5" ></text>
</g>
<g >
<title>do_mas_munmap (3,598,005 samples, 0.01%)</title><rect x="1188.6" y="133" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1191.60" y="143.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (3,598,005 samples, 0.01%)</title><rect x="1188.6" y="117" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.60" y="127.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.18.2] (10,561,146 samples, 0.03%)</title><rect x="14.5" y="277" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="17.46" y="287.5" ></text>
</g>
<g >
<title>Camera::buildCameraRay (127,964,657 samples, 0.33%)</title><rect x="1183.7" y="245" width="3.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1186.72" y="255.5" ></text>
</g>
<g >
<title>_dl_relocate_object (13,621,124 samples, 0.04%)</title><rect x="1188.9" y="261" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1191.95" y="271.5" ></text>
</g>
<g >
<title>Camera::getClosestIntersection (31,588,363 samples, 0.08%)</title><rect x="22.7" y="245" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="25.68" y="255.5" ></text>
</g>
<g >
<title>common_interrupt (4,875,599 samples, 0.01%)</title><rect x="1103.9" y="197" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1106.92" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,790,618 samples, 0.01%)</title><rect x="1188.6" y="245" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.59" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,134,705 samples, 0.02%)</title><rect x="1182.1" y="261" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.07" y="271.5" ></text>
</g>
<g >
<title>__sys_recvmsg (7,134,705 samples, 0.02%)</title><rect x="1182.1" y="213" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1185.07" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,643,813 samples, 0.03%)</title><rect x="1104.3" y="117" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1107.33" y="127.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (4,080,240 samples, 0.01%)</title><rect x="1182.1" y="133" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1185.12" y="143.5" ></text>
</g>
<g >
<title>Camera::getClosestIntersection (33,618,713,029 samples, 86.99%)</title><rect x="78.5" y="229" width="1026.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="81.52" y="239.5" >Camera::getClosestIntersection</text>
</g>
<g >
<title>__poll (5,284,325 samples, 0.01%)</title><rect x="1188.1" y="277" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1191.14" y="287.5" ></text>
</g>
<g >
<title>RedNoise (38,644,536,457 samples, 99.99%)</title><rect x="10.1" y="293" width="1179.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="13.07" y="303.5" >RedNoise</text>
</g>
<g >
<title>schedule_hrtimeout_range (3,951,241 samples, 0.01%)</title><rect x="1188.2" y="181" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1191.15" y="191.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (4,790,618 samples, 0.01%)</title><rect x="1188.6" y="197" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.59" y="207.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (3,618,017 samples, 0.01%)</title><rect x="1180.0" y="165" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1182.97" y="175.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (6,080,579 samples, 0.02%)</title><rect x="1104.7" y="165" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1107.71" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,168,790 samples, 0.02%)</title><rect x="1189.1" y="181" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.14" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (27,412,630 samples, 0.07%)</title><rect x="1104.1" y="213" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1107.07" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,400,268 samples, 0.01%)</title><rect x="1181.3" y="245" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1184.29" y="255.5" ></text>
</g>
<g >
<title>Utils::pack (33,343,867 samples, 0.09%)</title><rect x="77.3" y="245" width="1.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="80.27" y="255.5" ></text>
</g>
<g >
<title>__libc_start_call_main (189,681,638 samples, 0.49%)</title><rect x="1182.3" y="277" width="5.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1185.29" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (26,945,109 samples, 0.07%)</title><rect x="1104.1" y="197" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1107.09" y="207.5" ></text>
</g>
<g >
<title>[unknown] (34,779,975,183 samples, 89.99%)</title><rect x="78.5" y="245" width="1062.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.52" y="255.5" >[unknown]</text>
</g>
<g >
<title>Camera::buildCameraRay (601,097,909 samples, 1.56%)</title><rect x="58.3" y="229" width="18.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="61.31" y="239.5" ></text>
</g>
<g >
<title>Camera::raycast (148,293,511 samples, 0.38%)</title><rect x="1183.1" y="261" width="4.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1186.10" y="271.5" ></text>
</g>
<g >
<title>sock_sendmsg (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="117" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1182.55" y="127.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="149" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1182.55" y="159.5" ></text>
</g>
<g >
<title>sock_write_iter (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="133" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1182.55" y="143.5" ></text>
</g>
<g >
<title>[unknown] (37,958,250,334 samples, 98.22%)</title><rect x="19.5" y="261" width="1159.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.54" y="271.5" >[unknown]</text>
</g>
<g >
<title>handle_pte_fault (6,168,790 samples, 0.02%)</title><rect x="1189.1" y="165" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.14" y="175.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (12,376,288 samples, 0.03%)</title><rect x="18.2" y="261" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="21.17" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_poll (4,124,481 samples, 0.01%)</title><rect x="1181.3" y="213" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1184.30" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (4,790,618 samples, 0.01%)</title><rect x="1188.6" y="213" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1191.59" y="223.5" ></text>
</g>
<g >
<title>__common_interrupt (4,875,599 samples, 0.01%)</title><rect x="1103.9" y="181" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1106.92" y="191.5" ></text>
</g>
<g >
<title>__libc_recvmsg (8,612,797 samples, 0.02%)</title><rect x="1182.0" y="277" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1185.02" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (20,246,854 samples, 0.05%)</title><rect x="1104.1" y="181" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1107.09" y="191.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (121,198,244 samples, 0.31%)</title><rect x="1174.8" y="245" width="3.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1177.78" y="255.5" ></text>
</g>
<g >
<title>do_mmap (4,790,618 samples, 0.01%)</title><rect x="1188.6" y="165" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.59" y="175.5" ></text>
</g>
<g >
<title>do_sys_poll (4,246,654 samples, 0.01%)</title><rect x="1188.1" y="213" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.14" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9,290,189 samples, 0.02%)</title><rect x="1174.3" y="245" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1177.31" y="255.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (3,951,241 samples, 0.01%)</title><rect x="1188.2" y="165" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1191.15" y="175.5" ></text>
</g>
<g >
<title>do_lookup_x (14,333,522 samples, 0.04%)</title><rect x="1189.4" y="277" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.39" y="287.5" ></text>
</g>
<g >
<title>____sys_recvmsg (5,897,920 samples, 0.02%)</title><rect x="1182.1" y="181" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1185.07" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4,854,020 samples, 0.01%)</title><rect x="1179.7" y="37" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1182.73" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_writev (13,524,380 samples, 0.03%)</title><rect x="1179.5" y="213" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1182.55" y="223.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="101" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1182.55" y="111.5" ></text>
</g>
<g >
<title>mmap_region (4,475,854 samples, 0.01%)</title><rect x="1188.6" y="149" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1191.60" y="159.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (4,295,304 samples, 0.01%)</title><rect x="1182.1" y="149" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1185.12" y="159.5" ></text>
</g>
<g >
<title>do_writev (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="197" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1182.55" y="207.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.19.13] (5,427,244 samples, 0.01%)</title><rect x="18.6" y="261" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="21.57" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,469,172 samples, 0.05%)</title><rect x="1104.1" y="149" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1107.09" y="159.5" ></text>
</g>
<g >
<title>[radeonsi_dri.so] (3,422,396 samples, 0.01%)</title><rect x="15.0" y="277" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="17.95" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,618,017 samples, 0.01%)</title><rect x="1180.0" y="229" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.97" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (16,673,618 samples, 0.04%)</title><rect x="1104.1" y="133" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1107.14" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,790,618 samples, 0.01%)</title><rect x="1188.6" y="229" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.59" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (20,246,854 samples, 0.05%)</title><rect x="1104.1" y="165" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1107.09" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,284,325 samples, 0.01%)</title><rect x="1188.1" y="261" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.14" y="271.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (4,052,730 samples, 0.01%)</title><rect x="1188.3" y="277" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.33" y="287.5" ></text>
</g>
<g >
<title>[unknown] (38,215,234,542 samples, 98.88%)</title><rect x="15.1" y="277" width="1166.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.06" y="287.5" >[unknown]</text>
</g>
<g >
<title>__sys_recvfrom (3,618,017 samples, 0.01%)</title><rect x="1180.0" y="197" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1182.97" y="207.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.18.2] (76,563,371 samples, 0.20%)</title><rect x="15.8" y="261" width="2.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="18.83" y="271.5" ></text>
</g>
<g >
<title>[libLLVM-15.so.1] (6,609,575 samples, 0.02%)</title><rect x="15.6" y="261" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="18.63" y="271.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (4,106,840 samples, 0.01%)</title><rect x="15.7" y="245" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="18.69" y="255.5" ></text>
</g>
<g >
<title>Camera::buildCameraRay (102,885,493 samples, 0.27%)</title><rect x="19.5" y="245" width="3.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="22.54" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,284,325 samples, 0.01%)</title><rect x="1188.1" y="245" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.14" y="255.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (6,029,805 samples, 0.02%)</title><rect x="1104.1" y="101" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1107.14" y="111.5" ></text>
</g>
<g >
<title>_IO_getc (23,413,077 samples, 0.06%)</title><rect x="1178.5" y="261" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1181.53" y="271.5" ></text>
</g>
<g >
<title>Camera::getClosestIntersection (51,993,239 samples, 0.13%)</title><rect x="10.1" y="277" width="1.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="13.07" y="287.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (6,662,539 samples, 0.02%)</title><rect x="1179.7" y="69" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1182.67" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,524,380 samples, 0.03%)</title><rect x="1179.5" y="245" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1182.55" y="255.5" ></text>
</g>
<g >
<title>Triangle::v0 (1,157,573,626 samples, 3.00%)</title><rect x="1105.0" y="229" width="35.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1108.00" y="239.5" >Tr..</text>
</g>
<g >
<title>[libexpat.so.1.8.7] (11,423,717 samples, 0.03%)</title><rect x="18.7" y="261" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="21.74" y="271.5" ></text>
</g>
<g >
<title>[radeonsi_dri.so] (13,086,227 samples, 0.03%)</title><rect x="19.1" y="261" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="22.14" y="271.5" ></text>
</g>
<g >
<title>do_iter_write (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="165" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1182.55" y="175.5" ></text>
</g>
<g >
<title>update_wall_time (6,029,805 samples, 0.02%)</title><rect x="1104.1" y="85" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1107.14" y="95.5" ></text>
</g>
<g >
<title>schedule (3,951,241 samples, 0.01%)</title><rect x="1188.2" y="149" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1191.15" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_poll (4,246,654 samples, 0.01%)</title><rect x="1188.1" y="229" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1191.14" y="239.5" ></text>
</g>
<g >
<title>vfs_writev (13,099,235 samples, 0.03%)</title><rect x="1179.5" y="181" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1182.55" y="191.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (1,104,819,187 samples, 2.86%)</title><rect x="1140.5" y="245" width="33.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1143.45" y="255.5" >__..</text>
</g>
<g >
<title>Camera::raycast (1,739,050,179 samples, 4.50%)</title><rect x="23.6" y="245" width="53.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="26.64" y="255.5" >Camer..</text>
</g>
<g >
<title>do_syscall_64 (13,524,380 samples, 0.03%)</title><rect x="1179.5" y="229" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.55" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (9,064,746 samples, 0.02%)</title><rect x="1104.4" y="85" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1107.38" y="95.5" ></text>
</g>
<g >
<title>do_sys_poll (3,845,835 samples, 0.01%)</title><rect x="1181.3" y="197" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1184.30" y="207.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (4,202,737 samples, 0.01%)</title><rect x="1188.1" y="197" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.14" y="207.5" ></text>
</g>
<g >
<title>mmap64 (5,116,616 samples, 0.01%)</title><rect x="1188.6" y="261" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1191.59" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (7,134,705 samples, 0.02%)</title><rect x="1182.1" y="229" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1185.07" y="239.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4,790,618 samples, 0.01%)</title><rect x="1188.6" y="181" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.59" y="191.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (6,662,539 samples, 0.02%)</title><rect x="1179.7" y="85" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1182.67" y="95.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8,993,230 samples, 0.02%)</title><rect x="1189.1" y="245" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.08" y="255.5" ></text>
</g>
</g>
</svg>
